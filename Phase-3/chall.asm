SYS_WRITE equ 4
SYS_READ equ 3
STDOUT equ 1
STDIN equ 0

section .data                           
    msg db "Please enter number: ", 0xa
    lenForMsg equ $ - msg   
    inputMsg db "Please enter data for array: ", 0xa
    lenForInputMsg equ $ - inputMsg    
    sumMsg db "Sum of the array: ", 0xa
    lenForSumMsg equ $ - sumMsg

section .bss
    num resb 5
    array resb 1000

section .text         
    global _start
	
_start:     
    mov edx, lenForMsg
    mov ecx, msg
    mov ebx, STDOUT
    mov eax, SYS_WRITE
    int 0x80
  
    mov eax, SYS_READ
    mov ebx, STDIN
    mov ecx, num
    mov edx, 5
    int 0x80

    xor eax, eax
    xor ebx, ebx
    xor ecx, ecx
    xor edx, edx

    convert_loop:
        movzx ebx, byte [num + ecx]
        test ebx, ebx
        jz input_loop
        sub ebx, '0'  
        imul eax, 10
        add eax, ebx
        inc ecx
        jmp convert_loop

    input_loop:      
        mov edx, lenForInputMsg
        mov ecx, inputMsg
        mov ebx, STDOUT
        mov eax, SYS_WRITE
        int 0x80

        
        mov eax, SYS_READ
        mov ebx, STDIN
        mov edi, array      
        add edi, edx         
        mov ecx, 1
        int 0x80
        cmp byte [edi], 0    
        jz counting    
        inc edx              
        jmp input_loop       

    counting:  
        mov eax, SYS_WRITE
        mov ebx, STDOUT
        mov ecx, num
        int 0x80

    
    mov eax, 1
    xor ebx, ebx
    int 0x80


